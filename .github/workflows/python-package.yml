# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: flake8 Lint Errors
      uses: py-actions/flake8@v2
      with:
        args: --count --select=E9,F63,F7,F82 --show-source --statistics
        # stop the build if there are Python syntax errors or undefined names
        #    E9: Runtime errors (syntax, indentation, io)
        #    F63: Wrong use of operators and always-true assertion tests
        #    F7: Wrong position of statements (break, continue, return, ...)
        #    F82: Undefined (variable) name
    - name: flake8 Lint Warnings
      uses: py-actions/flake8@v2
      with:
        args: --count --exit-zero --statistics --show-source
        # print warnings if other style errors are found.
        #    see .flake8 config file for selected/ignored rules.
        #    warnings can be found in the action logs

  docs: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install package with docs
      run: |
        python3 -m pip install --upgrade pip
        pip install -e .[docs]
    - name: Build the documentation
      run: |
        cd docs && make html

  test:
    strategy:
      matrix:
        python-version: 
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
    - name: Install package with dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -e .[r_wrapper,tests,torch]
        pip install h5py
    - name: Test with pytest and measure coverage
      run: |
        pytest cblearn --cov=cblearn --cov-report=xml --remote-data
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
      
